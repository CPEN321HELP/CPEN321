// Generated by view binder compiler. Do not edit!
package com.example.help_m5.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.help_m5.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChatAdapterLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout myLayout;

  @NonNull
  public final TextView myMessage;

  @NonNull
  public final TextView myMsgTime;

  @NonNull
  public final LinearLayout oppoLayout;

  @NonNull
  public final TextView oppoMessage;

  @NonNull
  public final TextView oppoMsgTime;

  private ChatAdapterLayoutBinding(@NonNull RelativeLayout rootView, @NonNull LinearLayout myLayout,
      @NonNull TextView myMessage, @NonNull TextView myMsgTime, @NonNull LinearLayout oppoLayout,
      @NonNull TextView oppoMessage, @NonNull TextView oppoMsgTime) {
    this.rootView = rootView;
    this.myLayout = myLayout;
    this.myMessage = myMessage;
    this.myMsgTime = myMsgTime;
    this.oppoLayout = oppoLayout;
    this.oppoMessage = oppoMessage;
    this.oppoMsgTime = oppoMsgTime;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChatAdapterLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChatAdapterLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.chat_adapter_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChatAdapterLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.myLayout;
      LinearLayout myLayout = ViewBindings.findChildViewById(rootView, id);
      if (myLayout == null) {
        break missingId;
      }

      id = R.id.myMessage;
      TextView myMessage = ViewBindings.findChildViewById(rootView, id);
      if (myMessage == null) {
        break missingId;
      }

      id = R.id.myMsgTime;
      TextView myMsgTime = ViewBindings.findChildViewById(rootView, id);
      if (myMsgTime == null) {
        break missingId;
      }

      id = R.id.oppoLayout;
      LinearLayout oppoLayout = ViewBindings.findChildViewById(rootView, id);
      if (oppoLayout == null) {
        break missingId;
      }

      id = R.id.oppoMessage;
      TextView oppoMessage = ViewBindings.findChildViewById(rootView, id);
      if (oppoMessage == null) {
        break missingId;
      }

      id = R.id.oppoMsgTime;
      TextView oppoMsgTime = ViewBindings.findChildViewById(rootView, id);
      if (oppoMsgTime == null) {
        break missingId;
      }

      return new ChatAdapterLayoutBinding((RelativeLayout) rootView, myLayout, myMessage, myMsgTime,
          oppoLayout, oppoMessage, oppoMsgTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

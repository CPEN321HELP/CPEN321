// Generated by view binder compiler. Do not edit!
package com.example.help_m5.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.help_m5.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentAddFacilityBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ScrollView addFacilityScrollView;

  @NonNull
  public final Button cleanAll;

  @NonNull
  public final TextView facilityDescription;

  @NonNull
  public final TextView facilityDescriptionHint;

  @NonNull
  public final TextView facilityImageLink;

  @NonNull
  public final TextView facilityImageLinkHint;

  @NonNull
  public final TextView facilityLocation;

  @NonNull
  public final TextView facilityLocationHint;

  @NonNull
  public final TextView facilityTitle;

  @NonNull
  public final TextView facilityTitleHint;

  @NonNull
  public final TextView facilityType;

  @NonNull
  public final ImageView imageFacilityDescription;

  @NonNull
  public final ImageView imageFacilityImageLink;

  @NonNull
  public final ImageView imageFacilityLocation;

  @NonNull
  public final ImageView imageFacilityType;

  @NonNull
  public final ImageView imageNewFacilityTitle;

  @NonNull
  public final LinearLayout locationLayout;

  @NonNull
  public final EditText newFacilityDescription;

  @NonNull
  public final EditText newFacilityImageLink;

  @NonNull
  public final EditText newFacilityLocation;

  @NonNull
  public final EditText newFacilityTitle;

  @NonNull
  public final Spinner newFacilityType;

  @NonNull
  public final Button submitAll;

  private FragmentAddFacilityBinding(@NonNull ScrollView rootView,
      @NonNull ScrollView addFacilityScrollView, @NonNull Button cleanAll,
      @NonNull TextView facilityDescription, @NonNull TextView facilityDescriptionHint,
      @NonNull TextView facilityImageLink, @NonNull TextView facilityImageLinkHint,
      @NonNull TextView facilityLocation, @NonNull TextView facilityLocationHint,
      @NonNull TextView facilityTitle, @NonNull TextView facilityTitleHint,
      @NonNull TextView facilityType, @NonNull ImageView imageFacilityDescription,
      @NonNull ImageView imageFacilityImageLink, @NonNull ImageView imageFacilityLocation,
      @NonNull ImageView imageFacilityType, @NonNull ImageView imageNewFacilityTitle,
      @NonNull LinearLayout locationLayout, @NonNull EditText newFacilityDescription,
      @NonNull EditText newFacilityImageLink, @NonNull EditText newFacilityLocation,
      @NonNull EditText newFacilityTitle, @NonNull Spinner newFacilityType,
      @NonNull Button submitAll) {
    this.rootView = rootView;
    this.addFacilityScrollView = addFacilityScrollView;
    this.cleanAll = cleanAll;
    this.facilityDescription = facilityDescription;
    this.facilityDescriptionHint = facilityDescriptionHint;
    this.facilityImageLink = facilityImageLink;
    this.facilityImageLinkHint = facilityImageLinkHint;
    this.facilityLocation = facilityLocation;
    this.facilityLocationHint = facilityLocationHint;
    this.facilityTitle = facilityTitle;
    this.facilityTitleHint = facilityTitleHint;
    this.facilityType = facilityType;
    this.imageFacilityDescription = imageFacilityDescription;
    this.imageFacilityImageLink = imageFacilityImageLink;
    this.imageFacilityLocation = imageFacilityLocation;
    this.imageFacilityType = imageFacilityType;
    this.imageNewFacilityTitle = imageNewFacilityTitle;
    this.locationLayout = locationLayout;
    this.newFacilityDescription = newFacilityDescription;
    this.newFacilityImageLink = newFacilityImageLink;
    this.newFacilityLocation = newFacilityLocation;
    this.newFacilityTitle = newFacilityTitle;
    this.newFacilityType = newFacilityType;
    this.submitAll = submitAll;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAddFacilityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAddFacilityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_add_facility, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAddFacilityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ScrollView addFacilityScrollView = (ScrollView) rootView;

      id = R.id.cleanAll;
      Button cleanAll = ViewBindings.findChildViewById(rootView, id);
      if (cleanAll == null) {
        break missingId;
      }

      id = R.id.facilityDescription;
      TextView facilityDescription = ViewBindings.findChildViewById(rootView, id);
      if (facilityDescription == null) {
        break missingId;
      }

      id = R.id.facilityDescriptionHint;
      TextView facilityDescriptionHint = ViewBindings.findChildViewById(rootView, id);
      if (facilityDescriptionHint == null) {
        break missingId;
      }

      id = R.id.facilityImageLink;
      TextView facilityImageLink = ViewBindings.findChildViewById(rootView, id);
      if (facilityImageLink == null) {
        break missingId;
      }

      id = R.id.facilityImageLinkHint;
      TextView facilityImageLinkHint = ViewBindings.findChildViewById(rootView, id);
      if (facilityImageLinkHint == null) {
        break missingId;
      }

      id = R.id.facilityLocation;
      TextView facilityLocation = ViewBindings.findChildViewById(rootView, id);
      if (facilityLocation == null) {
        break missingId;
      }

      id = R.id.facilityLocationHint;
      TextView facilityLocationHint = ViewBindings.findChildViewById(rootView, id);
      if (facilityLocationHint == null) {
        break missingId;
      }

      id = R.id.facilityTitle;
      TextView facilityTitle = ViewBindings.findChildViewById(rootView, id);
      if (facilityTitle == null) {
        break missingId;
      }

      id = R.id.facilityTitleHint;
      TextView facilityTitleHint = ViewBindings.findChildViewById(rootView, id);
      if (facilityTitleHint == null) {
        break missingId;
      }

      id = R.id.facilityType;
      TextView facilityType = ViewBindings.findChildViewById(rootView, id);
      if (facilityType == null) {
        break missingId;
      }

      id = R.id.imageFacilityDescription;
      ImageView imageFacilityDescription = ViewBindings.findChildViewById(rootView, id);
      if (imageFacilityDescription == null) {
        break missingId;
      }

      id = R.id.imageFacilityImageLink;
      ImageView imageFacilityImageLink = ViewBindings.findChildViewById(rootView, id);
      if (imageFacilityImageLink == null) {
        break missingId;
      }

      id = R.id.imageFacilityLocation;
      ImageView imageFacilityLocation = ViewBindings.findChildViewById(rootView, id);
      if (imageFacilityLocation == null) {
        break missingId;
      }

      id = R.id.imageFacilityType;
      ImageView imageFacilityType = ViewBindings.findChildViewById(rootView, id);
      if (imageFacilityType == null) {
        break missingId;
      }

      id = R.id.imageNewFacilityTitle;
      ImageView imageNewFacilityTitle = ViewBindings.findChildViewById(rootView, id);
      if (imageNewFacilityTitle == null) {
        break missingId;
      }

      id = R.id.locationLayout;
      LinearLayout locationLayout = ViewBindings.findChildViewById(rootView, id);
      if (locationLayout == null) {
        break missingId;
      }

      id = R.id.newFacilityDescription;
      EditText newFacilityDescription = ViewBindings.findChildViewById(rootView, id);
      if (newFacilityDescription == null) {
        break missingId;
      }

      id = R.id.newFacilityImageLink;
      EditText newFacilityImageLink = ViewBindings.findChildViewById(rootView, id);
      if (newFacilityImageLink == null) {
        break missingId;
      }

      id = R.id.newFacilityLocation;
      EditText newFacilityLocation = ViewBindings.findChildViewById(rootView, id);
      if (newFacilityLocation == null) {
        break missingId;
      }

      id = R.id.newFacilityTitle;
      EditText newFacilityTitle = ViewBindings.findChildViewById(rootView, id);
      if (newFacilityTitle == null) {
        break missingId;
      }

      id = R.id.newFacilityType;
      Spinner newFacilityType = ViewBindings.findChildViewById(rootView, id);
      if (newFacilityType == null) {
        break missingId;
      }

      id = R.id.submitAll;
      Button submitAll = ViewBindings.findChildViewById(rootView, id);
      if (submitAll == null) {
        break missingId;
      }

      return new FragmentAddFacilityBinding((ScrollView) rootView, addFacilityScrollView, cleanAll,
          facilityDescription, facilityDescriptionHint, facilityImageLink, facilityImageLinkHint,
          facilityLocation, facilityLocationHint, facilityTitle, facilityTitleHint, facilityType,
          imageFacilityDescription, imageFacilityImageLink, imageFacilityLocation,
          imageFacilityType, imageNewFacilityTitle, locationLayout, newFacilityDescription,
          newFacilityImageLink, newFacilityLocation, newFacilityTitle, newFacilityType, submitAll);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.help_m5.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.help_m5.R;
import com.google.android.gms.maps.MapView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFacilityBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView facilityAddress;

  @NonNull
  public final TextView facilityDescription;

  @NonNull
  public final TextView facilityDescriptionTitle;

  @NonNull
  public final TextView facilityLocationTitle;

  @NonNull
  public final LinearLayout facilityMap;

  @NonNull
  public final TextView facilityNumberOfRates;

  @NonNull
  public final TextView facilityRatingText;

  @NonNull
  public final LinearLayout facilityReport;

  @NonNull
  public final LinearLayout facilityReviews;

  @NonNull
  public final TextView facilityReviewsTitle;

  @NonNull
  public final TextView facilityTitle;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final MapView mapView;

  @NonNull
  public final AppCompatButton rateButton;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final AppCompatButton reporFacilityButton;

  private ActivityFacilityBinding(@NonNull ScrollView rootView, @NonNull TextView facilityAddress,
      @NonNull TextView facilityDescription, @NonNull TextView facilityDescriptionTitle,
      @NonNull TextView facilityLocationTitle, @NonNull LinearLayout facilityMap,
      @NonNull TextView facilityNumberOfRates, @NonNull TextView facilityRatingText,
      @NonNull LinearLayout facilityReport, @NonNull LinearLayout facilityReviews,
      @NonNull TextView facilityReviewsTitle, @NonNull TextView facilityTitle,
      @NonNull ImageView imageView2, @NonNull MapView mapView, @NonNull AppCompatButton rateButton,
      @NonNull RatingBar ratingBar, @NonNull AppCompatButton reporFacilityButton) {
    this.rootView = rootView;
    this.facilityAddress = facilityAddress;
    this.facilityDescription = facilityDescription;
    this.facilityDescriptionTitle = facilityDescriptionTitle;
    this.facilityLocationTitle = facilityLocationTitle;
    this.facilityMap = facilityMap;
    this.facilityNumberOfRates = facilityNumberOfRates;
    this.facilityRatingText = facilityRatingText;
    this.facilityReport = facilityReport;
    this.facilityReviews = facilityReviews;
    this.facilityReviewsTitle = facilityReviewsTitle;
    this.facilityTitle = facilityTitle;
    this.imageView2 = imageView2;
    this.mapView = mapView;
    this.rateButton = rateButton;
    this.ratingBar = ratingBar;
    this.reporFacilityButton = reporFacilityButton;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFacilityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFacilityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_facility, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFacilityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.facilityAddress;
      TextView facilityAddress = ViewBindings.findChildViewById(rootView, id);
      if (facilityAddress == null) {
        break missingId;
      }

      id = R.id.facilityDescription;
      TextView facilityDescription = ViewBindings.findChildViewById(rootView, id);
      if (facilityDescription == null) {
        break missingId;
      }

      id = R.id.facilityDescriptionTitle;
      TextView facilityDescriptionTitle = ViewBindings.findChildViewById(rootView, id);
      if (facilityDescriptionTitle == null) {
        break missingId;
      }

      id = R.id.facilityLocationTitle;
      TextView facilityLocationTitle = ViewBindings.findChildViewById(rootView, id);
      if (facilityLocationTitle == null) {
        break missingId;
      }

      id = R.id.facilityMap;
      LinearLayout facilityMap = ViewBindings.findChildViewById(rootView, id);
      if (facilityMap == null) {
        break missingId;
      }

      id = R.id.facilityNumberOfRates;
      TextView facilityNumberOfRates = ViewBindings.findChildViewById(rootView, id);
      if (facilityNumberOfRates == null) {
        break missingId;
      }

      id = R.id.facilityRatingText;
      TextView facilityRatingText = ViewBindings.findChildViewById(rootView, id);
      if (facilityRatingText == null) {
        break missingId;
      }

      id = R.id.facilityReport;
      LinearLayout facilityReport = ViewBindings.findChildViewById(rootView, id);
      if (facilityReport == null) {
        break missingId;
      }

      id = R.id.facilityReviews;
      LinearLayout facilityReviews = ViewBindings.findChildViewById(rootView, id);
      if (facilityReviews == null) {
        break missingId;
      }

      id = R.id.facilityReviewsTitle;
      TextView facilityReviewsTitle = ViewBindings.findChildViewById(rootView, id);
      if (facilityReviewsTitle == null) {
        break missingId;
      }

      id = R.id.facilityTitle;
      TextView facilityTitle = ViewBindings.findChildViewById(rootView, id);
      if (facilityTitle == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.mapView;
      MapView mapView = ViewBindings.findChildViewById(rootView, id);
      if (mapView == null) {
        break missingId;
      }

      id = R.id.rate_button;
      AppCompatButton rateButton = ViewBindings.findChildViewById(rootView, id);
      if (rateButton == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.repor_facility_button;
      AppCompatButton reporFacilityButton = ViewBindings.findChildViewById(rootView, id);
      if (reporFacilityButton == null) {
        break missingId;
      }

      return new ActivityFacilityBinding((ScrollView) rootView, facilityAddress,
          facilityDescription, facilityDescriptionTitle, facilityLocationTitle, facilityMap,
          facilityNumberOfRates, facilityRatingText, facilityReport, facilityReviews,
          facilityReviewsTitle, facilityTitle, imageView2, mapView, rateButton, ratingBar,
          reporFacilityButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
